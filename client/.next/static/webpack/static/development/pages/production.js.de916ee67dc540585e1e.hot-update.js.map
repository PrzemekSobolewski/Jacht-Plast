{"version":3,"file":"static/webpack/static/development/pages/production.js.de916ee67dc540585e1e.hot-update.js","sources":["webpack:///./components/hamburgerMenu.js","webpack:///./components/nav.js"],"sourcesContent":["import {elastic as Menu} from \"react-burger-menu\";\nimport React, {useState} from \"react\";\nimport {useRouter} from 'next/router';\nimport HAMBURGER from '../assets/hamburger.png'\nimport DELETE from '../assets/delete.png'\nimport logoImage from '../assets/images/logo.png';\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from \"../redux/actions/switchActions\";\n\nconst Hamburger = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const switchState = useSelector(state => state.switch);\n    const router = useRouter();\n\n    const setSwitch = (value) => {\n        if (value) {\n            dispatch(actions.setPl())\n        } else {\n            dispatch(actions.setEng())\n        }\n    };\n\n    return (\n        <div id=\"outer-container\">\n            <Menu left\n                  isOpen={isOpen}\n                  className={'burger_menu'}\n                  outerContainerId={\"outer-container\"}\n                  disableAutoFocus\n                  customCrossIcon={<img src={DELETE} className={'cross'} onClick={() => setIsOpen(false)}/>}\n                  customBurgerIcon={<img src={HAMBURGER} className={'hamburger'} onClick={() => setIsOpen(true)}/>}>\n                <img src={logoImage} id='logoImage' className={'hamburger_image'} alt={\"Logo of Jacht-Plast\"}\n                     onClick={() => router.push(\"/\")}/>\n                <div onClick={() => {\n                    setIsOpen(false);\n                    router.push(\"/\");\n                }} className={router.pathname === '/' ? 'item pressed' : 'item'}>\n                    {switchState.language.aboutUs}\n                </div>\n                <div onClick={() => {\n                    setIsOpen(false);\n                    router.push(\"/production\");\n                }} className={router.pathname === '/production' ? 'item pressed' : 'item'}>\n                    {switchState.language.production}\n                </div>\n                <div onClick={() => {\n                    setIsOpen(false);\n                    router.push(\"/transport\");\n                }} className={router.pathname === '/transport' ? 'item pressed' : 'item'}>\n                    {switchState.language.transport}\n                </div>\n                <div onClick={() => {\n                    setIsOpen(false);\n                    router.push(\"/contact\");\n                }} className={router.pathname === '/contact' ? 'item pressed' : 'item'}>\n                    {switchState.language.contact}\n                </div>\n                <div className={'switchContainerMobile'}>\n                    <Switch onChange={(value) => setSwitch(value)}\n                            checked={switchState.isPl}\n                            width={100}\n                            onColor={'#888'}\n                            checkedIcon={<img src={POLAND} alt={\"pl\"} className={'checkedSwitch'}/>}\n                            uncheckedIcon={<img src={ENG} alt={\"ENG\"} className={'uncheckedSwitch'}/>}\n                    />\n                </div>\n            </Menu>\n        </div>\n    )\n};\n\nexport default Hamburger;\n","import React, {useEffect, useContext} from 'react';\nimport {useRouter} from 'next/router';\nimport Headroom from \"react-headroom\";\nimport logoImage from '../assets/images/logo.png';\nimport * as actions from \"../redux/actions/switchActions\";\nimport * as cookieActions from \"../redux/actions/cookieActions\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport {useCookies, CookiesProvider} from 'react-cookie';\nimport CookiesModal from '../components/cookies';\n\nconst Nav = (props) => {\n    const dispatch = useDispatch();\n    const switchState = useSelector(state => state.switch);\n    const cookieState = useSelector(state => state.cookie);\n    const [cookies, setCookie] = useCookies(['switch']);\n    const router = useRouter();\n\n    useEffect(() => {\n        if (cookies.switch !== undefined) {\n            dispatch(cookieActions.acceptCookie());\n            setSwitch(cookies.switch === \"true\")\n        }\n    });\n\n    const setSwitch = (value) => {\n        if (value) {\n            dispatch(actions.setPl())\n        } else {\n            dispatch(actions.setEng())\n        }\n        if (cookieState.cookieAccepted) {\n            setCookie('switch', switchState, {path: '/'});\n        }\n    };\n\n    const accept = () => {\n        dispatch(cookieActions.acceptCookie());\n        setCookie('switch', switchState, {path: '/'});\n    };\n\n    const close = () => {\n        dispatch(cookieActions.cancelCookie());\n    };\n\n    return (\n        <CookiesProvider>\n            <Headroom style={{backgroundColor: 'white'}}>\n                <img src={logoImage} id='logoImage' className={'logo'} alt={\"Logo of Jacht-Plast\"}\n                     onClick={() => router.push(\"/\")}/>\n                <div className={'rightBox'}>\n                    <ul className={'list'}>\n                        <li onClick={() => router.push(\"/\")} className={router.pathname === '/' ? 'pressed' : ''}>\n                            {switchState.language.aboutUs}\n                        </li>\n                        <li onClick={() => router.push(\"/production\")} className={router.pathname === '/production' ? 'pressed' : ''}>\n                            {switchState.language.production}\n                        </li>\n                        <li onClick={() => router.push(\"/transport\")} className={router.pathname === '/transport' ? 'pressed' : ''}>\n                            {switchState.language.transport}\n                        </li>\n                        <li onClick={() => router.push(\"/contact\")} className={router.pathname === '/contact' ? 'pressed' : ''}>\n                            {switchState.language.contact}\n                        </li>\n                    </ul>\n                    <div className={'switchContainer'}>\n                        <Switch onChange={(value) => setSwitch(value)}\n                                checked={switchState.isPl}\n                                width={100}\n                                onColor={'#888'}\n                                checkedIcon={<img src={POLAND} alt={\"PL\"} className={'checkedSwitch'}/>}\n                                uncheckedIcon={<img src={ENG} alt={\"ENG\"} className={'uncheckedSwitch'}/>}\n                        />\n                    </div>\n                </div>\n            </Headroom>\n            {cookieState.showCookies ? <CookiesModal close={close} accept={accept}/> : null}\n        </CookiesProvider>\n    )\n};\n\nexport default Nav;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}