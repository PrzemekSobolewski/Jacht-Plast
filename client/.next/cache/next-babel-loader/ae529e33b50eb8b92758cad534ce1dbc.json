{"ast":null,"code":"var _jsxFileName = \"/home/konrad/WebstormProjects/Jacht-Plast/client/components/nav.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport Headroom from \"react-headroom\";\nimport logoImage from '../assets/images/logo.png';\nimport * as actions from \"../redux/actions/switchActions\";\nimport * as cookieActions from \"../redux/actions/cookieActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport { useCookies, CookiesProvider } from 'react-cookie';\nimport CookiesModal from '../components/cookies';\n\nconst Nav = props => {\n  const dispatch = useDispatch();\n  const switchState = useSelector(state => state.switch);\n  const cookieState = useSelector(state => state.cookie);\n  const [cookies, setCookie] = useCookies(['switch']);\n  const router = useRouter();\n  useEffect(() => {\n    if (cookies.switch !== undefined) {\n      dispatch(cookieActions.acceptCookie());\n      setSwitch(cookies.switch === \"true\");\n    }\n  });\n\n  const setSwitch = value => {\n    if (value) {\n      dispatch(actions.setPl());\n    } else {\n      dispatch(actions.setEng());\n    }\n\n    if (cookieState.cookieAccepted) {\n      setCookie('switch', switchState, {\n        path: '/'\n      });\n    }\n  };\n\n  const accept = () => {\n    dispatch(cookieActions.acceptCookie());\n    setCookie('switch', switchState, {\n      path: '/'\n    });\n  };\n\n  const close = () => {\n    dispatch(cookieActions.cancelCookie());\n  };\n\n  return __jsx(CookiesProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Headroom, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: logoImage,\n    id: \"logoImage\",\n    className: 'logo',\n    alt: \"Logo of Jacht-Plast\",\n    onClick: () => router.push(\"/\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: 'rightBox',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: 'list',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    onClick: () => router.push(\"/\"),\n    className: router.pathname === '/' ? 'pressed' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, switchState.language.aboutUs), __jsx(\"li\", {\n    onClick: () => router.push(\"/production\"),\n    className: router.pathname === '/production' ? 'pressed' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, switchState.language.production), __jsx(\"li\", {\n    onClick: () => router.push(\"/transport\"),\n    className: router.pathname === '/transport' ? 'pressed' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, switchState.language.transport), __jsx(\"li\", {\n    onClick: () => router.push(\"/contact\"),\n    className: router.pathname === '/contact' ? 'pressed' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, switchState.language.contact)), __jsx(\"div\", {\n    className: 'switchContainer',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Switch, {\n    onChange: value => setSwitch(value),\n    checked: switchState.isPl,\n    width: 100,\n    onColor: '#888',\n    checkedIcon: __jsx(\"img\", {\n      src: POLAND,\n      alt: \"PL\",\n      className: 'checkedSwitch',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    uncheckedIcon: __jsx(\"img\", {\n      src: ENG,\n      alt: \"ENG\",\n      className: 'uncheckedSwitch',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))), cookieState.showCookies ? __jsx(CookiesModal, {\n    close: close,\n    accept: accept,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }) : null);\n};\n\nexport default Nav;","map":{"version":3,"sources":["/home/konrad/WebstormProjects/Jacht-Plast/client/components/nav.js"],"names":["React","useEffect","useContext","useRouter","Headroom","logoImage","actions","cookieActions","useDispatch","useSelector","Switch","POLAND","ENG","useCookies","CookiesProvider","CookiesModal","Nav","props","dispatch","switchState","state","switch","cookieState","cookie","cookies","setCookie","router","undefined","acceptCookie","setSwitch","value","setPl","setEng","cookieAccepted","path","accept","close","cancelCookie","backgroundColor","push","pathname","language","aboutUs","production","transport","contact","isPl","showCookies"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from 'react';\nimport {useRouter} from 'next/router';\nimport Headroom from \"react-headroom\";\nimport logoImage from '../assets/images/logo.png';\nimport * as actions from \"../redux/actions/switchActions\";\nimport * as cookieActions from \"../redux/actions/cookieActions\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport {useCookies, CookiesProvider} from 'react-cookie';\nimport CookiesModal from '../components/cookies';\n\nconst Nav = (props) => {\n    const dispatch = useDispatch();\n    const switchState = useSelector(state => state.switch);\n    const cookieState = useSelector(state => state.cookie);\n    const [cookies, setCookie] = useCookies(['switch']);\n    const router = useRouter();\n\n    useEffect(() => {\n        if (cookies.switch !== undefined) {\n            dispatch(cookieActions.acceptCookie());\n            setSwitch(cookies.switch === \"true\")\n        }\n    });\n\n    const setSwitch = (value) => {\n        if (value) {\n            dispatch(actions.setPl())\n        } else {\n            dispatch(actions.setEng())\n        }\n        if (cookieState.cookieAccepted) {\n            setCookie('switch', switchState, {path: '/'});\n        }\n    };\n\n    const accept = () => {\n        dispatch(cookieActions.acceptCookie());\n        setCookie('switch', switchState, {path: '/'});\n    };\n\n    const close = () => {\n        dispatch(cookieActions.cancelCookie());\n    };\n\n    return (\n        <CookiesProvider>\n            <Headroom style={{backgroundColor: 'white'}}>\n                <img src={logoImage} id='logoImage' className={'logo'} alt={\"Logo of Jacht-Plast\"}\n                     onClick={() => router.push(\"/\")}/>\n                <div className={'rightBox'}>\n                    <ul className={'list'}>\n                        <li onClick={() => router.push(\"/\")} className={router.pathname === '/' ? 'pressed' : ''}>\n                            {switchState.language.aboutUs}\n                        </li>\n                        <li onClick={() => router.push(\"/production\")} className={router.pathname === '/production' ? 'pressed' : ''}>\n                            {switchState.language.production}\n                        </li>\n                        <li onClick={() => router.push(\"/transport\")} className={router.pathname === '/transport' ? 'pressed' : ''}>\n                            {switchState.language.transport}\n                        </li>\n                        <li onClick={() => router.push(\"/contact\")} className={router.pathname === '/contact' ? 'pressed' : ''}>\n                            {switchState.language.contact}\n                        </li>\n                    </ul>\n                    <div className={'switchContainer'}>\n                        <Switch onChange={(value) => setSwitch(value)}\n                                checked={switchState.isPl}\n                                width={100}\n                                onColor={'#888'}\n                                checkedIcon={<img src={POLAND} alt={\"PL\"} className={'checkedSwitch'}/>}\n                                uncheckedIcon={<img src={ENG} alt={\"ENG\"} className={'uncheckedSwitch'}/>}\n                        />\n                    </div>\n                </div>\n            </Headroom>\n            {cookieState.showCookies ? <CookiesModal close={close} accept={accept}/> : null}\n        </CookiesProvider>\n    )\n};\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}