{"ast":null,"code":"var _jsxFileName = \"/home/konrad/WebstormProjects/Jacht-Plast/client/components/hamburgerMenu.js\";\nvar __jsx = React.createElement;\nimport { elastic as Menu } from \"react-burger-menu\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from 'next/router';\nimport NavigationContext from \"./NavigationContext\";\nimport HAMBURGER from '../assets/hamburger.png';\nimport DELETE from '../assets/delete.png';\nimport logoImage from '../assets/images/logo.png';\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../redux/actions/switchActions\";\n\nconst Hamburger = () => {\n  const {\n    0: route,\n    1: setRoute\n  } = useContext(NavigationContext);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const dispatch = useDispatch();\n  const switchState = useSelector(state => state.switch);\n  const router = useRouter();\n\n  const setSwitch = value => {\n    if (value) {\n      dispatch(actions.setPl());\n    } else {\n      dispatch(actions.setEng());\n    }\n  };\n\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, []);\n  return __jsx(\"div\", {\n    id: \"outer-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Menu, {\n    left: true,\n    isOpen: isOpen,\n    className: 'burger_menu',\n    outerContainerId: \"outer-container\",\n    disableAutoFocus: true,\n    customCrossIcon: __jsx(\"img\", {\n      src: DELETE,\n      className: 'cross',\n      onClick: () => setIsOpen(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    customBurgerIcon: __jsx(\"img\", {\n      src: HAMBURGER,\n      className: 'hamburger',\n      onClick: () => setIsOpen(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: logoImage,\n    id: \"logoImage\",\n    className: 'hamburger_image',\n    alt: \"Logo of Jacht-Plast\",\n    onClick: () => {\n      setRoute('/');\n      router.push(\"/\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    onClick: () => {\n      setRoute('/');\n      setIsOpen(false);\n      router.push(\"/\");\n    },\n    className: route === '/' ? 'item pressed' : 'item',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, switchState.language.aboutUs), __jsx(\"div\", {\n    onClick: () => {\n      setRoute('/production');\n      setIsOpen(false);\n      router.push(\"/production\");\n    },\n    className: route === '/production' ? 'item pressed' : 'item',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, switchState.language.production), __jsx(\"div\", {\n    onClick: () => {\n      setRoute('/transport');\n      setIsOpen(false);\n      router.push(\"/transport\");\n    },\n    className: route === '/transport' ? 'item pressed' : 'item',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, switchState.language.transport), __jsx(\"div\", {\n    onClick: () => {\n      setRoute('/contact');\n      setIsOpen(false);\n      router.push(\"/contact\");\n    },\n    className: route === '/contact' ? 'item pressed' : 'item',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, switchState.language.contact), __jsx(\"div\", {\n    className: 'switchContainerMobile',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Switch, {\n    onChange: value => setSwitch(value),\n    checked: switchState.isPl,\n    width: 100,\n    onColor: '#888',\n    checkedIcon: __jsx(\"img\", {\n      src: POLAND,\n      alt: \"pl\",\n      className: 'checkedSwitch',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }),\n    uncheckedIcon: __jsx(\"img\", {\n      src: ENG,\n      alt: \"ENG\",\n      className: 'uncheckedSwitch',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))));\n};\n\nexport default Hamburger;","map":{"version":3,"sources":["/home/konrad/WebstormProjects/Jacht-Plast/client/components/hamburgerMenu.js"],"names":["elastic","Menu","React","useContext","useEffect","useState","useRouter","NavigationContext","HAMBURGER","DELETE","logoImage","Switch","POLAND","ENG","useDispatch","useSelector","actions","Hamburger","route","setRoute","isOpen","setIsOpen","dispatch","switchState","state","switch","router","setSwitch","value","setPl","setEng","window","location","pathname","push","language","aboutUs","production","transport","contact","isPl"],"mappings":"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","sourcesContent":["import {elastic as Menu} from \"react-burger-menu\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {useRouter} from 'next/router';\nimport NavigationContext from \"./NavigationContext\";\nimport HAMBURGER from '../assets/hamburger.png'\nimport DELETE from '../assets/delete.png'\nimport logoImage from '../assets/images/logo.png';\nimport Switch from \"react-switch\";\nimport POLAND from \"../assets/images/poland.png\";\nimport ENG from \"../assets/images/uk.png\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as actions from \"../redux/actions/switchActions\";\n\nconst Hamburger = () => {\n    const [route, setRoute] = useContext(NavigationContext);\n    const [isOpen, setIsOpen] = useState(false);\n    const dispatch = useDispatch();\n    const switchState = useSelector(state => state.switch);\n    const router = useRouter();\n\n    const setSwitch = (value) => {\n        if (value) {\n            dispatch(actions.setPl())\n        } else {\n            dispatch(actions.setEng())\n        }\n    };\n\n    useEffect(() => {\n        setRoute(window.location.pathname);\n    }, []);\n    return (\n        <div id=\"outer-container\">\n            <Menu left\n                  isOpen={isOpen}\n                  className={'burger_menu'}\n                  outerContainerId={\"outer-container\"}\n                  disableAutoFocus\n                  customCrossIcon={<img src={DELETE} className={'cross'} onClick={() => setIsOpen(false)}/>}\n                  customBurgerIcon={<img src={HAMBURGER} className={'hamburger'} onClick={() => setIsOpen(true)}/>}>\n                <img src={logoImage} id='logoImage' className={'hamburger_image'} alt={\"Logo of Jacht-Plast\"}\n                     onClick={() => {\n                         setRoute('/')\n                         router.push(\"/\");\n                     }}/>\n                <div onClick={() => {\n                    setRoute('/');\n                    setIsOpen(false);\n                    router.push(\"/\");\n                }} className={route === '/' ? 'item pressed' : 'item'}>\n                    {switchState.language.aboutUs}\n                </div>\n                <div onClick={() => {\n                    setRoute('/production');\n                    setIsOpen(false);\n                    router.push(\"/production\");\n                }} className={route === '/production' ? 'item pressed' : 'item'}>\n                    {switchState.language.production}\n                </div>\n                <div onClick={() => {\n                    setRoute('/transport');\n                    setIsOpen(false);\n                    router.push(\"/transport\");\n                }} className={route === '/transport' ? 'item pressed' : 'item'}>\n                    {switchState.language.transport}\n                </div>\n                <div onClick={() => {\n                    setRoute('/contact');\n                    setIsOpen(false);\n                    router.push(\"/contact\");\n                }} className={route === '/contact' ? 'item pressed' : 'item'}>\n                    {switchState.language.contact}\n                </div>\n                <div className={'switchContainerMobile'}>\n                    <Switch onChange={(value) => setSwitch(value)}\n                            checked={switchState.isPl}\n                            width={100}\n                            onColor={'#888'}\n                            checkedIcon={<img src={POLAND} alt={\"pl\"} className={'checkedSwitch'}/>}\n                            uncheckedIcon={<img src={ENG} alt={\"ENG\"} className={'uncheckedSwitch'}/>}\n                    />\n                </div>\n            </Menu>\n        </div>\n    )\n};\n\nexport default Hamburger;\n"]},"metadata":{},"sourceType":"module"}